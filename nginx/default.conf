# syntax says there's an upstream, calling it client, located at client:3000 (default port of client (react) app)
# tell nginx that there's an upstream server at client:3000
upstream client {
    server client:3000;
}

# tell nginx that there's an upstream server at express-api:3000
upstream express-api {
    server express-api:5000;
}

server {
    # want there to be a server that listens on port 80
    listen 80;

    # pass any request that comes in with / and route it to upstream client created above
    location / {
        proxy_pass http://client;
    }

    # without this, will get websocket error in console when submitting a number for Fib sequence
    # exposes 1 route through nginx server that allows websocket connection to be made with running react process
    location /sockjs-node {
        proxy_pass http://client;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
    }

    location /api {
        # chops off /api part of url, $1 is reference to whatever text was matched by (.*) regex, break keyword 
        # is directive, don't apply any other rewrite rules
        rewrite /api/(.*) /$1 break;
        # if anyone ever comes here, route it to upstream express-api created above
        proxy_pass http://express-api;
    }
}



